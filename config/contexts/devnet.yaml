# Devnet context to be used for local deployments against Anvil chain
version: 0.0.7
context:
  # Name of the context
  name: "devnet"
  # Chains available to this context
  chains:
    l1:
      chain_id: 31337
      rpc_url: "http://localhost:7545"
      fork:
        block: 4015731
        url: "https://special-yolo-river.ethereum-holesky.quiknode.pro/2d21099a19e7c896a22b9fcc23dc8ce80f2214a5/"
        block_time: 3
    l2:
      chain_id: 31337
      rpc_url: "http://localhost:7545"
      fork:
        block: 4015731
        url: "https://special-yolo-river.ethereum-holesky.quiknode.pro/2d21099a19e7c896a22b9fcc23dc8ce80f2214a5/"
        block_time: 3
  # Stake Root Transporter configuration
  transporter:
    schedule: 0 */2 * * *
    private_key: 0x2ba58f64c57faa1073d63add89799f2a0101855a8b289b1330cb500758d5d1ee
    bls_private_key: 0x2ba58f64c57faa1073d63add89799f2a0101855a8b289b1330cb500758d5d1ee
    active_stake_roots:
      - chain_id: 31337
        stake_root: 0x50322e11fb32a88de6146a5b8ce223b8047b86d685d5622cdd72e7f43b8831e0
  # All key material (BLS and ECDSA) within this file should be used for local testing ONLY
  # ECDSA keys used are from Anvil's private key set
  # BLS keystores are deterministically pre-generated and embedded. These are NOT derived from a secure seed
  # Available private keys for deploying
  deployer_private_key: "0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80" # Anvil Private Key 0
  app_private_key: "0x5de4111afa1a4b94908f83103eb1f1706367c2e68ca870fc3fb9a804cdab365a" # Anvil Private Key 2
  # List of stakers and their delegations
  stakers:
    - address: "0x23618e81E3f5cdF7f54C3d65f7FBc0aBf5B21E8f"
      ecdsa_key: "0xdbda1821b80551c9d65939329250298aa3472ba22feea921c0cf5d620ea67b97" # Anvil 8
      deposits:
        - strategy_address: "0x7D704507b76571a51d9caE8AdDAbBFd0ba0e63d3"
          name: "stETH_Strategy"
          deposit_amount: "5ETH" # depositIntoStrategy amount 
      operator: "0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65" # Operator to delegate the stake via delegationManager.delegateTo()
    - address: "0xa0Ee7A142d267C1f36714E4a8F75612F20a79720"
      ecdsa_key: "0x2a871d0798f97d79848a013d4936a73bf4cc922c825d33c1cf7073dff6d409c6"
      deposits:
        - strategy_address: "0x7D704507b76571a51d9caE8AdDAbBFd0ba0e63d3"
          name: "stETH_Strategy"
          deposit_amount: "5ETH" # depositIntoStrategy amount 
      operator: "0x90F79bf6EB2c4f870365E785982E1f101E93b906"
  # List of Operators and their private keys / stake details
  operators:
    - address: "0x90F79bf6EB2c4f870365E785982E1f101E93b906"
      ecdsa_key: "0x7c852118294e51e653712a81e05800f419141751be58f605c371e15141b007a6" # Anvil Private Key 3
      bls_keystore_path: "keystores/operator1.keystore.json"
      bls_keystore_password: "testpass"
      allocations:
        - strategy_address: "0x7D704507b76571a51d9caE8AdDAbBFd0ba0e63d3"
          name: "stETH_Strategy"
          # Only allocate if these operator set IDs exist in the deployed operator_sets 
          operator_set_allocations:
            - operator_set: "0"
              allocation_in_wads: "500000000000000000" # 5e17 i.e 50% of max allocation
            - operator_set: "1"
              allocation_in_wads: "500000000000000000" # 5e17 i.e 50% of max allocation
    - address: "0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65"
      ecdsa_key: "0x47e179ec197488593b187f80a00eb0da91f1b9d0b13f8733639f19c30a34926a" # Anvil Private Key 4
      bls_keystore_path: "keystores/operator2.keystore.json"
      bls_keystore_password: "testpass"
      allocations:
        - strategy_address: "0x7D704507b76571a51d9caE8AdDAbBFd0ba0e63d3"
          name: "stETH_Strategy"
          # Only allocate if these operator set IDs exist in the deployed operator_sets 
          operator_set_allocations:
            - operator_set: "0"
              allocation_in_wads: "500000000000000000" # 5e17 i.e 50% of max allocation
            - operator_set: "1"
              allocation_in_wads: "500000000000000000" # 5e17 i.e 50% of max allocation
    - address: "0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc"
      ecdsa_key: "0x8b3a350cf5c34c9194ca85829a2df0ec3153be0318b5e2d3348e872092edffba" # Anvil Private Key 5
      bls_keystore_path: "keystores/operator3.keystore.json"
      bls_keystore_password: "testpass"
    - address: "0x976EA74026E726554dB657fA54763abd0C3a0aa9"
      ecdsa_key: "0x92db14e403b83dfe3df233f83dfa3a0d7096f21ca9b0d6d6b8d88b2b4ec1564e" # Anvil Private Key 6
      bls_keystore_path: "keystores/operator4.keystore.json"
      bls_keystore_password: "testpass"
    - address: "0x14dC79964da2C08b23698B3D3cc7Ca32193d9955"
      ecdsa_key: "0x4bbbf85ce3377467afe5d46f804f221813b2bb87f24d81f60f1fcdbf7cbf4356" # Anvil Private Key 7
      bls_keystore_path: "keystores/operator5.keystore.json"
      bls_keystore_password: "testpass"
  # AVS configuration
  avs:
    address: "0x70997970C51812dc3A010C7d01b50e0d17dc79C8"
    avs_private_key: "0x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d" # Anvil Private Key 1
    metadata_url: "https://my-org.com/avs/metadata.json"
    registrar_address: "0x0123456789abcdef0123456789ABCDEF01234567"
  # Core EigenLayer contract addresses
  eigenlayer:
    l1:
      allocation_manager: "0xFdD5749e11977D60850E06bF5B13221Ad95eb6B4"
      delegation_manager: "0x75dfE5B44C2E530568001400D3f704bC8AE350CC"
      strategy_manager: "0xdfB5f6CE42aAA7830E94ECFCcAd411beF4d4D5b6"
      bn254_table_calculator: "0x033af59c1b030Cc6eEE07B150FD97668497dc74b"
      cross_chain_registry: "0x0022d2014901F2AFBF5610dDFcd26afe2a65Ca6F"
      key_registrar: "0x1C84Bb62fE7791e173014A879C706445fa893BbE"
      release_manager: "0x323A9FcB2De80d04B5C4B0F72ee7799100D32F0F"
    l2:
      bn254_certificate_verifier: "0xf462d03A82C1F3496B0DFe27E978318eD1720E1f"
      operator_table_updater: "0xd7230B89E5E2ed1FD068F0FF9198D7960243f12a"
  # Contracts deployed on `devnet start`
  deployed_contracts:
    - abi: .devkit/contracts/out/TaskMailbox.sol/TaskMailbox.json
      address: 0x0c8A72d89AA40B71Ee5F430E89E1681f944DAAc0
      name: taskMailbox
    - abi: .devkit/contracts/out/TaskAVSRegistrar.sol/TaskAVSRegistrar.json
      address: 0xC2100780F828810bAaeCD3039111006E12B26CF8
      name: taskAVSRegistrar
    - abi: .devkit/contracts/out/AVSTaskHook.sol/AVSTaskHook.json
      address: 0x6b165dE91F825584117c23f79F634849aCff4f68
      name: avsTaskHook
    - abi: .devkit/contracts/out/FaaS.sol/FaaS.json
      address: 0x69B9aE74db4e9dF49cBb925eb96f86B4904ab275
      name: FaaS
  # Operator Sets registered on `devnet start`
  operator_sets:
    - operator_set_id: 0
      strategies:
        - strategy: 0x5C8b55722f421556a2AAfb7A3EA63d4c3e514312
    - operator_set_id: 1
      strategies:
        - strategy: 0x5C8b55722f421556a2AAfb7A3EA63d4c3e514312
  # Operators registered on `devnet start`
  operator_registrations:
    - address: 0x90F79bf6EB2c4f870365E785982E1f101E93b906
      operator_set_id: 0
      payload: 0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000f61676772656761746f723a393030300000000000000000000000000000000000
    - address: 0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65
      operator_set_id: 1
      payload: 0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000d6578656375746f723a3930393000000000000000000000000000000000000000
  # Release artifact
  artifact:
    artifactId: ""
    component: ""
    digest: ""
    registry: ""
    version: ""
